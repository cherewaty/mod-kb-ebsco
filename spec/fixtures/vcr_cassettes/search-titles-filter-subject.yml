---
http_interactions:
- request:
    method: get
    uri: https://okapi.frontside.io/configurations/entries?query=module=KB_EBSCO
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      Accept:
      - application/json
      X-Okapi-Tenant:
      - fs
      X-Okapi-Token:
      - TEST_OKAPI_TOKEN
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.13.5
      Date:
      - Fri, 13 Jul 2018 18:36:09 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Okapi-Trace:
      - 'GET mod-authtoken-1.4.1-SNAPSHOT.21 http://10.39.255.17:8081/configurations/entries..
        : 202 2436us'
      - 'GET mod-configuration-4.0.4-SNAPSHOT.36 http://10.39.247.129:8081/configurations/entries..
        : 200 43033us'
      Host:
      - okapi.frontside.io
      X-Real-Ip:
      - 10.36.2.1
      X-Forwarded-For:
      - 10.36.2.1
      X-Forwarded-Host:
      - okapi.frontside.io
      X-Forwarded-Port:
      - '443'
      X-Forwarded-Proto:
      - https
      X-Original-Uri:
      - "/configurations/entries?query=module=KB_EBSCO"
      X-Scheme:
      - https
      X-Auth-Request-Redirect:
      - "/configurations/entries?query=module=KB_EBSCO"
      Accept:
      - application/json
      X-Okapi-Tenant:
      - fs
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
      X-Okapi-Request-Id:
      - 918534/configurations
      X-Okapi-Url:
      - http://10.39.254.87:80
      X-Okapi-Permissions:
      - '["configuration.entries.collection.get","configuration.entries.collection.get"]'
      X-Okapi-User-Id:
      - 1ad737b0-d847-11e6-bf26-cec0c932ce01
      X-Okapi-Token:
      - TEST_OKAPI_TOKEN
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains;
    body:
      encoding: ASCII-8BIT
      string: |-
        {
          "configs" : [ {
            "id" : "28fd0ce0-108e-4471-8a7b-4645319fd707",
            "module" : "KB_EBSCO",
            "configName" : "api_credentials",
            "code" : "kb.ebsco.credentials",
            "description" : "EBSCO RM-API Credentials",
            "enabled" : true,
            "value" : "customer-id=TEST_CUSTOMER_ID&api-key=TEST_API_KEY",
            "metadata" : {
              "createdDate" : "2018-06-26T13:23:48.592+0000",
              "createdByUserId" : "1ad737b0-d847-11e6-bf26-cec0c932ce01",
              "updatedDate" : "2018-06-26T13:23:48.592+0000",
              "updatedByUserId" : "1ad737b0-d847-11e6-bf26-cec0c932ce01"
            }
          } ],
          "totalRecords" : 1,
          "resultInfo" : {
            "totalRecords" : 1,
            "facets" : [ ]
          }
        }
    http_version: 
  recorded_at: Fri, 13 Jul 2018 18:36:09 GMT
- request:
    method: get
    uri: https://api.ebsco.io/rm/rmaccounts/TEST_CUSTOMER_ID/titles?advancedsearch=true&count=25&offset=1&orderby=relevance&resourcetype=all&search=history&searchfield=subject&selection=all
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Flexirest/1.6.7
      Connection:
      - Keep-Alive
      Accept:
      - application/json
      X-Api-Key:
      - TEST_API_KEY
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Content-Length:
      - '32139'
      Connection:
      - keep-alive
      Date:
      - Fri, 13 Jul 2018 18:36:10 GMT
      X-Amzn-Requestid:
      - 9c7d4b1b-86cb-11e8-b525-71bd9c88bb47
      X-Amzn-Remapped-Connection:
      - close
      X-Amz-Apigw-Id:
      - J-qcAGIAoAMFVFA=
      X-Amzn-Trace-Id:
      - Root=1-5b48f119-07f9c784296d2214688509d2;Sampled=1
      X-Application-Context:
      - resourcemanagement.knowledgebase.rmapiedge:live:8092
      X-Amzn-Remapped-Date:
      - Fri, 13 Jul 2018 18:36:10 GMT
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 cf50699455d063ab813aee70063811cf.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - _dll_hx5R28auD7RtvZ7FO6N54OhfuH_Aj4rNkf3-QoQmUadn6fuiw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 13 Jul 2018 18:36:10 GMT
recorded_with: VCR 3.0.3
